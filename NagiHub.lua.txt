local Library = loadstring(Game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()

local PhantomForcesWindow = Library:NewWindow("NAGI Premium✨")

local Bladeball = PhantomForcesWindow:NewSection("Main=))")


------------------------------------------------------------------------------------------------------------------------------------
Bladeball:CreateButton("Grall Ball", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(38.44727325439453, 11.166534423828125, -48.344566345214844)
end)
---------------------------------------------------------------------------------------------------------------------------------------
Bladeball:CreateButton("Auto GoaL 1", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-243.94134521484375, 11.166532516479492, -46.96743392944336)
end)
-----------------------------------------------------------------------------------------------------------------------------------------
Bladeball:CreateButton("Auto GoaL 2", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(320.45465087890625, 11.166534423828125, -44.71014404296875)
end)
------------------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------------------------------
Bladeball:CreateButton("Shoot Gui", function()
-- Create the GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
 
-- Create a frame to hold the draggable UI elements
local DraggableFrame = Instance.new("Frame")
DraggableFrame.Parent = ScreenGui
DraggableFrame.Size = UDim2.new(0, 300, 0, 200)
DraggableFrame.Position = UDim2.new(0.5, -150, 0.5, -100) -- Centered
DraggableFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
DraggableFrame.BorderSizePixel = 0
DraggableFrame.Draggable = true
DraggableFrame.Active = true
 
-- Create the Shoot button
local ShootButton = Instance.new("TextButton")
ShootButton.Parent = DraggableFrame
ShootButton.Text = "Sút =))"
ShootButton.Size = UDim2.new(0, 150, 0, 50)
ShootButton.Position = UDim2.new(0.5, -75, 0, 10) -- Positioned inside DraggableFrame
ShootButton.BackgroundColor3 = Color3.fromRGB(0, 128, 255)
ShootButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ShootButton.Font = Enum.Font.SourceSansBold
ShootButton.TextSize = 20
 
-- Create a TextBox for custom shot speed input
local SpeedTextBox = Instance.new("TextBox")
SpeedTextBox.Parent = DraggableFrame
SpeedTextBox.Size = UDim2.new(0, 200, 0, 40)
SpeedTextBox.Position = UDim2.new(0.5, -100, 0.6, 0) -- Below the button
SpeedTextBox.Text = "150" -- Default value
SpeedTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedTextBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
SpeedTextBox.BorderSizePixel = 0
SpeedTextBox.Font = Enum.Font.SourceSans
SpeedTextBox.PlaceholderText = "Enter Speed (e.g., 300)"
SpeedTextBox.TextSize = 20
 
-- Create a label for showing the shot speed
local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Parent = DraggableFrame
SpeedLabel.Size = UDim2.new(0, 200, 0, 50)
SpeedLabel.Position = UDim2.new(0.5, -100, 0.7, 0) -- Below the textbox
SpeedLabel.Text = "Shot Speed: " .. SpeedTextBox.Text
SpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedLabel.BackgroundTransparency = 1
SpeedLabel.TextSize = 20
 
-- Update the shot speed label whenever the text changes
SpeedTextBox.FocusLost:Connect(function()
    local inputValue = tonumber(SpeedTextBox.Text)
    if inputValue then
        SpeedLabel.Text = "Shot Speed: " .. inputValue
    else
        SpeedLabel.Text = "Invalid Speed"
    end
end)
 
-- Define the shooting functionality
local function shootFastDown()
    -- Define the target direction for shooting downwards like a goal
    local downwardDirection = Vector3.new(0, -50, -100) -- Aim downward and forward
 
    -- Get the shot speed from the text box (converted to a number)
    local shotPower = tonumber(SpeedTextBox.Text) or 150 -- Default to 150 if input is invalid
 
    -- Fire the server to shoot the ball downward and forward
    local args = {
        [1] = shotPower, -- Shot power
        [4] = downwardDirection -- Target direction (downward)
    }
 
    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("BallService"):WaitForChild("RE"):WaitForChild("Shoot"):FireServer(unpack(args))
 
    print("Ball shot downward with speed: " .. shotPower)
end
 
-- Connect the button to the function
ShootButton.MouseButton1Click:Connect(shootFastDown)
 
-- Add drag functionality for mobile/PC
local dragging, dragInput, dragStart, startPos
 
-- Function to start dragging
DraggableFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = DraggableFrame.Position
    end
end)
 
-- Function to drag the frame
DraggableFrame.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        DraggableFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
 
-- Function to stop dragging
DraggableFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)
end)
-------------------------------------------------------------------------------------------------------------------------------------------------
Bladeball:CreateButton("INFNITY STAMINA", function()
local args = {
    [1] = 0/0
}

game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("StaminaService"):WaitForChild("RE"):WaitForChild("DecreaseStamina"):FireServer(unpack(args))
end)
-------------------------------------------------------------------------------------------------------------------------------------------------------

Bladeball:CreateButton("Speeds", function()
function isNumber(str)
  if tonumber(str) ~= nil or str == 'inf' then
    return true
  end
end
local tspeed = 1
local hb = game:GetService("RunService").Heartbeat
local tpwalking = true
local player = game:GetService("Players")
local lplr = player.LocalPlayer
local chr = lplr.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
while tpwalking and hb:Wait() and chr and hum and hum.Parent do
  if hum.MoveDirection.Magnitude > 0 then
    if tspeed and isNumber(tspeed) then
      chr:TranslateBy(hum.MoveDirection * tonumber(tspeed))
    else
      chr:TranslateBy(hum.MoveDirection)
    end
  end
end
end)

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Bladeball:CreateButton("Brings Gui", function()
getgenv().TeleportBall = false 
getgenv().onoffgui = true 


local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")


local LocalPlayer = Players.LocalPlayer


local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local ToggleButton = Instance.new("TextButton")
local Title = Instance.new("TextLabel")
local OnOffToggleButton = Instance.new("TextButton")


ScreenGui.Name = "BallTeleportGUI"
ScreenGui.Parent = game.CoreGui
ScreenGui.ResetOnSpawn = false

Frame.Name = "MainFrame"
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Frame.BorderSizePixel = 2
Frame.Position = UDim2.new(0.4, 0, 0.3, 0)
Frame.Size = UDim2.new(0, 200, 0, 130)
Frame.Active = true
Frame.Draggable = true 

Title.Name = "Title"
Title.Parent = Frame
Title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Title.Size = UDim2.new(1, 0, 0.2, 0)
Title.Font = Enum.Font.SourceSansBold
Title.Text = "Bring ball"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 20

ToggleButton.Name = "ToggleButton"
ToggleButton.Parent = Frame
ToggleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
ToggleButton.Position = UDim2.new(0.1, 0, 0.3, 0)
ToggleButton.Size = UDim2.new(0.8, 0, 0.25, 0)
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.Text = "Teleport: OFF"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextSize = 18

OnOffToggleButton.Name = "OnOffToggleButton"
OnOffToggleButton.Parent = Frame
OnOffToggleButton.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
OnOffToggleButton.Position = UDim2.new(0.1, 0, 0.6, 0)
OnOffToggleButton.Size = UDim2.new(0.8, 0, 0.25, 0)
OnOffToggleButton.Font = Enum.Font.SourceSansBold
OnOffToggleButton.Text = "Delete gui"
OnOffToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
OnOffToggleButton.TextSize = 18


ToggleButton.MouseButton1Click:Connect(function()
    getgenv().TeleportBall = not getgenv().TeleportBall
    ToggleButton.Text = getgenv().TeleportBall and "Bring: ON" or "Bring: OFF"
end)

OnOffToggleButton.MouseButton1Click:Connect(function()
    getgenv().onoffgui = not getgenv().onoffgui
    Frame.Visible = getgenv().onoffgui
    OnOffToggleButton.Text = getgenv().onoffgui and "Hide GUI" or "Show GUI"
    OnOffToggleButton.BackgroundColor3 = getgenv().onoffgui and Color3.fromRGB(150, 0, 0) or Color3.fromRGB(0, 150, 0)
end)


function teleportToBall()
    local ball = workspace:FindFirstChild("Football") or workspace:FindFirstChild("Ball")
    if ball and ball:IsA("BasePart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = ball.CFrame + Vector3.new(0, 3, 0) 
    end
end


RunService.RenderStepped:Connect(function()
    if getgenv().TeleportBall then
        teleportToBall()
    end
end)
end)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Bladeball:CreateButton("Ball To", function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")
local ball = game.Workspace:WaitForChild("Football")

-- Define Goal Boxes
local homeBox = game.Workspace.AI.Home.DiveBox
local awayBox = game.Workspace.AI.Away.DiveBox
local originalBallSize = ball.Size  

-- Create GUI
local gui = Instance.new("ScreenGui")
gui.Parent = player:WaitForChild("PlayerGui")

-- Toggle Button
local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 150, 0, 50)
button.Position = UDim2.new(0, 10, 0.5, -25)
button.Text = "GK Mode: OFF"
button.Parent = gui

-- GK Mode Variables
local gkMode = false
local gkLoop = nil

-- Get Player's Team
local function getTeam()
    if player.Team and player.Team.Name == "Home" then
        return "Home", homeBox
    elseif player.Team and player.Team.Name == "Away" then
        return "Away", awayBox
    else
        return nil, nil
    end
end

-- **Diving Function**
local function dive(direction)
    if direction == "Left" then
        game:GetService("ReplicatedStorage").Controllers.AnimatonController.DiveL:Fire()
    elseif direction == "Right" then
        game:GetService("ReplicatedStorage").Controllers.AnimatonController.DiveR:Fire()
    elseif direction == "Forward" then
        game:GetService("ReplicatedStorage").Controllers.AnimatonController.DiveF:Fire()
    end
end

-- **Increase Ball Hitbox**
local function modifyHitbox(enable)
    if enable then
        ball.Size = Vector3.new(originalBallSize.X * 4, originalBallSize.Y * 4, originalBallSize.Z * 4) -- **4x Bigger**
    else
        ball.Size = originalBallSize -- Reset to normal size
    end
end

-- **Main GK Function**
local function autoGK()
    while gkMode do
        if not character or not character.Parent then
            character = player.Character or player.CharacterAdded:Wait()
            humanoid = character:WaitForChild("Humanoid")
            rootPart = character:WaitForChild("HumanoidRootPart")
        end

        if not ball or not ball.Parent then
            ball = game.Workspace:WaitForChild("Football")
        end

        local team, diveBox = getTeam()
        if team and diveBox and ball then
            local ballPos = ball.Position
            local boxPos = diveBox.Position
            local distance = (ballPos - boxPos).Magnitude

            -- **Stop Ball if it's about to enter the goal**
            if distance < 15 then
                ball.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                ball.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
            end
            
            -- **Teleport to intercept & dive instantly**
            if distance < 25 then
                rootPart.Position = Vector3.new(ballPos.X, rootPart.Position.Y, boxPos.Z)  -- Move to block the shot
                
                -- **Decide which way to dive based on ball direction**
                local ballDirection = ball.AssemblyLinearVelocity
                if math.abs(ballDirection.X) > math.abs(ballDirection.Z) then
                    if ballDirection.X > 0 then
                        dive("Right")
                    else
                        dive("Left")
                    end
                else
                    dive("Forward")
                end
            end
        end
        task.wait(0.01) -- **Ultra-fast reaction time**
    end
end

-- **Button Click Event**
button.MouseButton1Click:Connect(function()
    gkMode = not gkMode
    button.Text = gkMode and "GK Mode: ON" or "GK Mode: OFF"

    if gkMode then
        gkLoop = task.spawn(autoGK)
        modifyHitbox(true)  -- **Bigger hitbox**
    else
        if gkLoop then
            task.cancel(gkLoop)
        end
        modifyHitbox(false)  -- **Reset hitbox**
    end
end)
end)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Bladeball:CreateButton("Bóng Magic", function()
L=game:service'Players'.LocalPlayer;game:service'RunService'.Heartbeat:Connect(function()if L.Character and L.Character:FindFirstChild'HumanoidRootPart'then local B=workspace:FindFirstChild'Football'if B and B.AssemblyLinearVelocity.Magnitude<100 then B:ApplyImpulse((L.Character.HumanoidRootPart.Position+Vector3.new(0,-2.5,0)-B.Position).Unit*18)end end end)
end)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Bladeball:CreateButton("Auto Dẽ Banh", function()
if not getgenv().AutoDribbleSettings then 
    getgenv().AutoDribbleSettings={
        Enabled=true, -- ik what this is
        range=22} -- change the range if it doesnt work good for you
end;

local S=getgenv().AutoDribbleSettings;
local R=game:GetService("ReplicatedStorage");
local P=game:GetService("Players");
local U=game:GetService("RunService");
local B=R.Packages.Knit.Services.BallService.RE.Dribble;
local A=require(R.Assets.Animations);

if not B or not A then return end;

local L=P.LocalPlayer;
local C=L.Character or L.CharacterAdded:Wait();
local H=C:WaitForChild("HumanoidRootPart");
local M=C:WaitForChild("Humanoid");

local function G(s)
    if not A.Dribbles[s]then return nil end;
    local I=Instance.new("Animation");
    I.AnimationId=A.Dribbles[s];
    return M:LoadAnimation(I)
end;

local function T(p)
    if p==L then return false end;
    local c=p.Character;
    if not c then return false end;
    local V=c.Values and c.Values.Sliding;
    if V and V.Value==true then return true end;
    local h=c:FindFirstChildOfClass("Humanoid");
    if h and h.MoveDirection.Magnitude>0 and h.WalkSpeed==0 then return true end;
    return false
end;

local function O(p)
    if not L.Team or not p.Team then return false end;
    return L.Team~=p.Team
end;

local function D(d)
    if not S.Enabled or not C.Values.HasBall.Value then return end;
    B:FireServer();
    local s=L.PlayerStats.Style.Value;
    local t=G(s);
    if t then t:Play();t:AdjustSpeed(math.clamp(1+(10-d)/10,1,2))end;
    local F=workspace:FindFirstChild("Football");
    if F then F.AssemblyLinearVelocity=Vector3.new(0,0,0);
    F.CFrame=C.HumanoidRootPart.CFrame*CFrame.new(0,-2.5,0)end
end;

U.Heartbeat:Connect(function()
    if not S.Enabled or not C or not H then return end;
    for _,p in pairs(P:GetPlayers())do 
        if O(p)and T(p)then 
            local r=p.Character and p.Character:FindFirstChild("HumanoidRootPart")
            if r then 
                local d=(r.Position-H.Position).Magnitude;
                if d<S.range then 
                    D(d);
                    break 
                end 
            end 
        end 
    end 
end);

-- GUI Code (Added at the End)
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local RangeLabel = Instance.new("TextLabel")
local RangeInput = Instance.new("TextBox")
local OnLabel = Instance.new("TextLabel") -- Green "ON" Label

-- Parent GUI to PlayerGui
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Frame Properties
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Frame.Size = UDim2.new(0, 200, 0, 120) -- Increased height for "ON" label
Frame.Position = UDim2.new(0, 50, 0, 100)
Frame.BorderSizePixel = 2
Frame.BorderColor3 = Color3.fromRGB(255, 255, 255)

-- Title
Title.Parent = Frame
Title.Text = "Legit Auto Dribble"
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 18

-- Range Label
RangeLabel.Parent = Frame
RangeLabel.Position = UDim2.new(0, 10, 0, 40)
RangeLabel.Size = UDim2.new(0, 180, 0, 20)
RangeLabel.Text = "Range: " .. tostring(S.range)
RangeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
RangeLabel.BackgroundTransparency = 1
RangeLabel.Font = Enum.Font.SourceSansBold
RangeLabel.TextSize = 16

-- Range Input
RangeInput.Parent = Frame
RangeInput.Position = UDim2.new(0, 10, 0, 60)
RangeInput.Size = UDim2.new(0, 180, 0, 30)
RangeInput.Text = tostring(S.range)
RangeInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
RangeInput.TextColor3 = Color3.fromRGB(255, 255, 255)
RangeInput.Font = Enum.Font.SourceSansBold
RangeInput.TextSize = 18
RangeInput.ClearTextOnFocus = false

-- Green "ON" Label
OnLabel.Parent = Frame
OnLabel.Position = UDim2.new(0, 10, 0, 95) -- Positioned below input
OnLabel.Size = UDim2.new(0, 180, 0, 20)
OnLabel.Text = "ON"
OnLabel.TextColor3 = Color3.fromRGB(0, 255, 0) -- Green color
OnLabel.BackgroundTransparency = 1
OnLabel.Font = Enum.Font.SourceSansBold
OnLabel.TextSize = 18

-- Update Range on Input Change
RangeInput.FocusLost:Connect(function()
    local newRange = tonumber(RangeInput.Text)
    if newRange and newRange > 0 then
        S.range = newRange
        RangeLabel.Text = "Range: " .. tostring(newRange)
    else
        RangeInput.Text = tostring(S.range) -- Reset if invalid input
    end
end)
end)